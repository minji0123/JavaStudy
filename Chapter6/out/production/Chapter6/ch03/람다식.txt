[함수형 프로그래밍과 람다식]

1. 자바는 원래 객체지향 프로그래밍이다.
    클래스를 만들고, 메소드를 선언하고 호출해서 구현한다.

2. 함수형 프로그래밍 방식(람다식)
    - 함수를 구현하고, 함수를 호출한다. 근데 호출할 때 매개변수를 던져준다.
        - 들어온 매개변수를 기반으로 함수가 수행이 된다.

    - 이 함수는 외부에 있는 변수들을 사용하지 않는다.
        - 외부에 있는 변수를 사용하게 되면, 외부에 영향을 끼치게 된다. (예기치 않은 side effect)
            - 이 side effect가 버그, 예기치 않은 오류 등등을 발생시킨다.
        - 매개변수를 받고, 이 매개변수를 기반으로 내부에서만 실행하기 때문에 외부에 사이드이펙트를 발생시키지 않는다.
        - 동시에 여러 함수가 호출되어도, 문제가 발생하지 않는다.
            - 병렬처리가 가능하다.


[람다식 문법]
1. 익명 함수 만들기
    - 함수에 이름이 없다.
2. 매개변수와 매개변수를 이용한 실행문
    - (매개변수) -> {실행문;}

3. 예시_메소드
    int add(int x, int y){return x+y;}

    예시_람다식
    (int x, int y) -> {return x+y;}

4. 매개변수가 하나면 자료형과 괄호 생략가능
    str -> sysout(str);

5. 실행문이 한문장인 return 문일때, return, {} 둘 중 하나라도 생략 안하면 오류
    str -> return str.length(); // 오류
    str -> str.length();
    (x,y) -> x+y;